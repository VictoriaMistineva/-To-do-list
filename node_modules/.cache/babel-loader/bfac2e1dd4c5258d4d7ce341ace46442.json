{"ast":null,"code":"/* eslint-disable no-unused-expressions, @typescript-eslint/camelcase, no-underscore-dangle */\n\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { createClient } from './client';\nimport { renderNativePanel } from './NativePanel/NativePanel';\nimport { createAudioRecorder } from './createAudioRecorder';\nimport { renderAssistantRecordPanel } from './record';\nimport { createCallbackLogger } from './record/callback-logger';\nimport { createConsoleLogger } from './record/console-logger';\nimport { createLogCallbackRecorder } from './record/callback-recorder';\nimport { createRecordDownloader } from './record/record-downloader';\nconst SDK_VERSION = '20.09.1.3576';\nconst APP_VERSION = '20.09.1.3576';\nconst CAPABILITIES = JSON.stringify({\n  screen: {\n    available: true,\n    width: window.innerWidth,\n    height: window.innerHeight\n  },\n  speak: {\n    available: true\n  }\n});\nconst FEATURES = JSON.stringify({\n  appTypes: ['DIALOG', 'WEB_APP']\n});\nexport const legacyDevice = {\n  clientType: 'simple',\n  channel: 'Android_SB',\n  channelVersion: '8.1.0.2932_RC',\n  platformName: 'WEBDBG 1.0',\n  platformVersion: '1.0'\n};\nexport const settings = {\n  dubbing: 1,\n  echo: -1\n};\nexport const initializeAssistantSDK = ({\n  initPhrase,\n  url,\n  userChannel,\n  surface,\n  userId = `webdbg_userid_${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`,\n  token = `webdbg_eribtoken_${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`,\n  surfaceVersion,\n  deviceId,\n  locale = 'ru',\n  nativePanel = {\n    defaultText: 'Покажи что-нибудь',\n    render: renderNativePanel\n  },\n  sdkVersion = SDK_VERSION,\n  enableRecord,\n  recordParams,\n  settings: settingsOverride,\n  voiceSettings\n}) => {\n  const device = {\n    platformType: 'WEBDBG',\n    platformVersion: '1.0',\n    sdkVersion,\n    surface,\n    surfaceVersion: surfaceVersion || APP_VERSION,\n    features: FEATURES,\n    capabilities: CAPABILITIES,\n    deviceId,\n    additionalInfo: JSON.stringify({\n      host_app_id: 'ru.sberbank.sdakit.demo',\n      sdk_version: sdkVersion\n    })\n  };\n  let clientLogger = (recordParams === null || recordParams === void 0 ? void 0 : recordParams.logger) ? recordParams.logger : createConsoleLogger();\n  let loggerCb;\n  const recorder = createLogCallbackRecorder(subscribe => {\n    loggerCb = subscribe;\n  }, (recordParams === null || recordParams === void 0 ? void 0 : recordParams.defaultActive) != null ? recordParams.defaultActive : true);\n  const saver = createRecordDownloader();\n\n  if (enableRecord && (recordParams === null || recordParams === void 0 ? void 0 : recordParams.logger) == null) {\n    clientLogger = createCallbackLogger(logEntry => loggerCb && loggerCb(logEntry));\n  }\n\n  const vpsClient = createClient({\n    url,\n    userId,\n    token,\n    userChannel,\n    locale,\n    device,\n    legacyDevice,\n    settings: settingsOverride || settings,\n    version: 3\n  }, clientLogger, voiceSettings);\n  let appInfo;\n  const initialSmartAppData = [];\n  const requestIdMap = {};\n  let clientReady = false; // флаг готовности клиента к приему onData\n\n  let assistantReady = false; // флаг готовности контекста ассистента\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  let state = null;\n\n  const createSystemMessageBase = () => {\n    return {\n      app_info: appInfo,\n      meta: {\n        current_app: {\n          app_info: appInfo,\n          state\n        }\n      }\n    };\n  };\n\n  const sendServerAction = ({\n    data,\n    message_name,\n    requestId\n  }) => {\n    let messageId;\n\n    if (requestId) {\n      messageId = Date.now();\n      requestIdMap[messageId.toString()] = requestId;\n    }\n\n    return vpsClient.sendSystemMessage({\n      data: Object.assign(Object.assign({}, createSystemMessageBase()), {\n        server_action: data\n      }),\n      messageName: message_name || 'SERVER_ACTION'\n    }, undefined, messageId);\n  };\n\n  const updateState = () => {\n    var _a;\n\n    if ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onRequestState) {\n      state = window.AssistantClient.onRequestState();\n    }\n  };\n\n  const sendText = (text, params = {}) => {\n    updateState();\n    return vpsClient.batch(({\n      sendText,\n      sendSystemMessage\n    }) => {\n      state && sendSystemMessage({\n        data: Object.assign({}, createSystemMessageBase()),\n        messageName: ''\n      }, false);\n      return sendText(text, params);\n    });\n  };\n\n  const fn = () => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b, _c;\n\n    yield new Promise(resolve => {\n      vpsClient.on('ready', resolve);\n    });\n    yield vpsClient.sendSystemMessage({\n      data: {},\n      messageName: 'OPEN_ASSISTANT'\n    });\n\n    if (initPhrase) {\n      const res = yield vpsClient.sendText(initPhrase);\n      appInfo = res === null || res === void 0 ? void 0 : res.app_info;\n      (res === null || res === void 0 ? void 0 : res.character) && initialSmartAppData.push({\n        type: 'character',\n        character: res.character\n      });\n\n      for (const item of (res === null || res === void 0 ? void 0 : res.items) || []) {\n        if (item.command != null) {\n          initialSmartAppData.push(item.command);\n        }\n      }\n\n      if (clientReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n        ((_b = window.AssistantClient) === null || _b === void 0 ? void 0 : _b.onStart) && ((_c = window.AssistantClient) === null || _c === void 0 ? void 0 : _c.onStart());\n\n        for (const smartAppData of initialSmartAppData) {\n          window.AssistantClient.onData(smartAppData);\n        }\n      }\n\n      assistantReady = true;\n    }\n  });\n\n  const promise = fn();\n  window.appInitialData = initialSmartAppData;\n  window.AssistantHost = {\n    close() {\n      appInfo = undefined;\n      initialSmartAppData.splice(0, initialSmartAppData.length);\n      state = null;\n      sendText('Хватит'); // нужно слать close_app\n    },\n\n    ready() {\n      var _a, _b, _c;\n\n      if (assistantReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n        ((_b = window.AssistantClient) === null || _b === void 0 ? void 0 : _b.onStart) && ((_c = window.AssistantClient) === null || _c === void 0 ? void 0 : _c.onStart());\n\n        for (const smartAppData of initialSmartAppData) {\n          window.AssistantClient.onData(smartAppData);\n        }\n      }\n\n      clientReady = true;\n    },\n\n    sendData(payload, messageName = null) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield promise;\n        updateState();\n        sendServerAction({\n          data: JSON.parse(payload),\n          message_name: messageName || undefined\n        });\n      });\n    },\n\n    sendDataContainer(container) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield promise;\n        updateState();\n        sendServerAction(JSON.parse(container));\n      });\n    },\n\n    setSuggest() {}\n\n  };\n\n  const createVoiceStream = () => {\n    updateState();\n    return vpsClient.createVoiceStream(createSystemMessageBase());\n  };\n\n  const updateDevUI = (suggestions = []) => {\n    if (nativePanel) {\n      const {\n        render\n      } = nativePanel,\n            props = __rest(nativePanel, [\"render\"]);\n\n      (render || renderNativePanel)(Object.assign(Object.assign({}, props), {\n        sendText,\n        createVoiceStream,\n        suggestions\n      }));\n    }\n  };\n\n  vpsClient.on('systemMessage', (message, original) => {\n    var _a, _b, _c;\n\n    for (const item of message.items) {\n      if (item.command) {\n        if (clientReady && assistantReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n          window.AssistantClient.onData(Object.assign(Object.assign({}, item.command), {\n            sdkMeta: {\n              mid: original.messageId,\n              requestId: requestIdMap[original.messageId.toString()]\n            }\n          }));\n        }\n      }\n    }\n\n    updateDevUI((_c = (_b = message.suggestions) === null || _b === void 0 ? void 0 : _b.buttons) !== null && _c !== void 0 ? _c : []);\n  });\n  updateDevUI();\n  enableRecord && renderAssistantRecordPanel(recorder, saver);\n  return {\n    sendText,\n    createVoiceStream,\n    createAudioRecorder,\n    on: vpsClient.on,\n    destroy: vpsClient.destroy\n  };\n};","map":{"version":3,"sources":["/home/zelairy/Рабочий стол/todo-canvas-app/node_modules/@sberdevices/assistant-client/dist/dev.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","createClient","renderNativePanel","createAudioRecorder","renderAssistantRecordPanel","createCallbackLogger","createConsoleLogger","createLogCallbackRecorder","createRecordDownloader","SDK_VERSION","APP_VERSION","CAPABILITIES","JSON","stringify","screen","available","width","window","innerWidth","height","innerHeight","speak","FEATURES","appTypes","legacyDevice","clientType","channel","channelVersion","platformName","platformVersion","settings","dubbing","echo","initializeAssistantSDK","initPhrase","url","userChannel","surface","userId","Math","random","toString","substring","token","surfaceVersion","deviceId","locale","nativePanel","defaultText","render","sdkVersion","enableRecord","recordParams","settingsOverride","voiceSettings","device","platformType","features","capabilities","additionalInfo","host_app_id","sdk_version","clientLogger","logger","loggerCb","recorder","subscribe","defaultActive","saver","logEntry","vpsClient","version","appInfo","initialSmartAppData","requestIdMap","clientReady","assistantReady","state","createSystemMessageBase","app_info","meta","current_app","sendServerAction","data","message_name","requestId","messageId","Date","now","sendSystemMessage","assign","server_action","messageName","undefined","updateState","_a","AssistantClient","onRequestState","sendText","text","params","batch","fn","_b","_c","on","res","character","push","type","item","items","command","onData","onStart","smartAppData","promise","appInitialData","AssistantHost","close","splice","ready","sendData","payload","parse","sendDataContainer","container","setSuggest","createVoiceStream","updateDevUI","suggestions","props","message","original","sdkMeta","mid","buttons","destroy"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions, @typescript-eslint/camelcase, no-underscore-dangle */\n/* eslint-disable @typescript-eslint/ban-ts-ignore */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { createClient } from './client';\nimport { renderNativePanel } from './NativePanel/NativePanel';\nimport { createAudioRecorder } from './createAudioRecorder';\nimport { renderAssistantRecordPanel } from './record';\nimport { createCallbackLogger } from './record/callback-logger';\nimport { createConsoleLogger } from './record/console-logger';\nimport { createLogCallbackRecorder } from './record/callback-recorder';\nimport { createRecordDownloader } from './record/record-downloader';\nconst SDK_VERSION = '20.09.1.3576';\nconst APP_VERSION = '20.09.1.3576';\nconst CAPABILITIES = JSON.stringify({\n    screen: { available: true, width: window.innerWidth, height: window.innerHeight },\n    speak: { available: true },\n});\nconst FEATURES = JSON.stringify({\n    appTypes: ['DIALOG', 'WEB_APP'],\n});\nexport const legacyDevice = {\n    clientType: 'simple',\n    channel: 'Android_SB',\n    channelVersion: '8.1.0.2932_RC',\n    platformName: 'WEBDBG 1.0',\n    platformVersion: '1.0',\n};\nexport const settings = {\n    dubbing: 1,\n    echo: -1,\n};\nexport const initializeAssistantSDK = ({ initPhrase, url, userChannel, surface, userId = `webdbg_userid_${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`, token = `webdbg_eribtoken_${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`, surfaceVersion, deviceId, locale = 'ru', nativePanel = {\n    defaultText: 'Покажи что-нибудь',\n    render: renderNativePanel,\n}, sdkVersion = SDK_VERSION, enableRecord, recordParams, settings: settingsOverride, voiceSettings, }) => {\n    const device = {\n        platformType: 'WEBDBG',\n        platformVersion: '1.0',\n        sdkVersion,\n        surface,\n        surfaceVersion: surfaceVersion || APP_VERSION,\n        features: FEATURES,\n        capabilities: CAPABILITIES,\n        deviceId,\n        additionalInfo: JSON.stringify({\n            host_app_id: 'ru.sberbank.sdakit.demo',\n            sdk_version: sdkVersion,\n        }),\n    };\n    let clientLogger = (recordParams === null || recordParams === void 0 ? void 0 : recordParams.logger) ? recordParams.logger : createConsoleLogger();\n    let loggerCb;\n    const recorder = createLogCallbackRecorder((subscribe) => {\n        loggerCb = subscribe;\n    }, (recordParams === null || recordParams === void 0 ? void 0 : recordParams.defaultActive) != null ? recordParams.defaultActive : true);\n    const saver = createRecordDownloader();\n    if (enableRecord && (recordParams === null || recordParams === void 0 ? void 0 : recordParams.logger) == null) {\n        clientLogger = createCallbackLogger((logEntry) => loggerCb && loggerCb(logEntry));\n    }\n    const vpsClient = createClient({\n        url,\n        userId,\n        token,\n        userChannel,\n        locale,\n        device,\n        legacyDevice,\n        settings: settingsOverride || settings,\n        version: 3,\n    }, clientLogger, voiceSettings);\n    let appInfo;\n    const initialSmartAppData = [];\n    const requestIdMap = {};\n    let clientReady = false; // флаг готовности клиента к приему onData\n    let assistantReady = false; // флаг готовности контекста ассистента\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let state = null;\n    const createSystemMessageBase = () => {\n        return {\n            app_info: appInfo,\n            meta: {\n                current_app: {\n                    app_info: appInfo,\n                    state,\n                },\n            },\n        };\n    };\n    const sendServerAction = ({ data, message_name, requestId, }) => {\n        let messageId;\n        if (requestId) {\n            messageId = Date.now();\n            requestIdMap[messageId.toString()] = requestId;\n        }\n        return vpsClient.sendSystemMessage({\n            data: Object.assign(Object.assign({}, createSystemMessageBase()), { server_action: data }),\n            messageName: message_name || 'SERVER_ACTION',\n        }, undefined, messageId);\n    };\n    const updateState = () => {\n        var _a;\n        if ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onRequestState) {\n            state = window.AssistantClient.onRequestState();\n        }\n    };\n    const sendText = (text, params = {}) => {\n        updateState();\n        return vpsClient.batch(({ sendText, sendSystemMessage }) => {\n            state &&\n                sendSystemMessage({\n                    data: Object.assign({}, createSystemMessageBase()),\n                    messageName: '',\n                }, false);\n            return sendText(text, params);\n        });\n    };\n    const fn = () => __awaiter(void 0, void 0, void 0, function* () {\n        var _a, _b, _c;\n        yield new Promise((resolve) => {\n            vpsClient.on('ready', resolve);\n        });\n        yield vpsClient.sendSystemMessage({ data: {}, messageName: 'OPEN_ASSISTANT' });\n        if (initPhrase) {\n            const res = yield vpsClient.sendText(initPhrase);\n            appInfo = res === null || res === void 0 ? void 0 : res.app_info;\n            (res === null || res === void 0 ? void 0 : res.character) && initialSmartAppData.push({ type: 'character', character: res.character });\n            for (const item of (res === null || res === void 0 ? void 0 : res.items) || []) {\n                if (item.command != null) {\n                    initialSmartAppData.push(item.command);\n                }\n            }\n            if (clientReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n                ((_b = window.AssistantClient) === null || _b === void 0 ? void 0 : _b.onStart) && ((_c = window.AssistantClient) === null || _c === void 0 ? void 0 : _c.onStart());\n                for (const smartAppData of initialSmartAppData) {\n                    window.AssistantClient.onData(smartAppData);\n                }\n            }\n            assistantReady = true;\n        }\n    });\n    const promise = fn();\n    window.appInitialData = initialSmartAppData;\n    window.AssistantHost = {\n        close() {\n            appInfo = undefined;\n            initialSmartAppData.splice(0, initialSmartAppData.length);\n            state = null;\n            sendText('Хватит'); // нужно слать close_app\n        },\n        ready() {\n            var _a, _b, _c;\n            if (assistantReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n                ((_b = window.AssistantClient) === null || _b === void 0 ? void 0 : _b.onStart) && ((_c = window.AssistantClient) === null || _c === void 0 ? void 0 : _c.onStart());\n                for (const smartAppData of initialSmartAppData) {\n                    window.AssistantClient.onData(smartAppData);\n                }\n            }\n            clientReady = true;\n        },\n        sendData(payload, messageName = null) {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield promise;\n                updateState();\n                sendServerAction({ data: JSON.parse(payload), message_name: messageName || undefined });\n            });\n        },\n        sendDataContainer(container) {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield promise;\n                updateState();\n                sendServerAction(JSON.parse(container));\n            });\n        },\n        setSuggest() { },\n    };\n    const createVoiceStream = () => {\n        updateState();\n        return vpsClient.createVoiceStream(createSystemMessageBase());\n    };\n    const updateDevUI = (suggestions = []) => {\n        if (nativePanel) {\n            const { render } = nativePanel, props = __rest(nativePanel, [\"render\"]);\n            (render || renderNativePanel)(Object.assign(Object.assign({}, props), { sendText,\n                createVoiceStream,\n                suggestions }));\n        }\n    };\n    vpsClient.on('systemMessage', (message, original) => {\n        var _a, _b, _c;\n        for (const item of message.items) {\n            if (item.command) {\n                if (clientReady && assistantReady && ((_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData)) {\n                    window.AssistantClient.onData(Object.assign(Object.assign({}, item.command), { sdkMeta: { mid: original.messageId, requestId: requestIdMap[original.messageId.toString()] } }));\n                }\n            }\n        }\n        updateDevUI((_c = (_b = message.suggestions) === null || _b === void 0 ? void 0 : _b.buttons) !== null && _c !== void 0 ? _c : []);\n    });\n    updateDevUI();\n    enableRecord && renderAssistantRecordPanel(recorder, saver);\n    return {\n        sendText,\n        createVoiceStream,\n        createAudioRecorder,\n        on: vpsClient.on,\n        destroy: vpsClient.destroy,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}