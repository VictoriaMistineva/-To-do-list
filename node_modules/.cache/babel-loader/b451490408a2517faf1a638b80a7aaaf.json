{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_note\":\n      return { ...state,\n        notes: [...state.notes, {\n          id: Math.random().toString(36).substring(7),\n          title: action.note,\n          completed: false\n        }]\n      };\n\n    case \"done_note\":\n      return { ...state,\n        notes: state.notes.map(note => note.id === action.id ? { ...note,\n          completed: !note.completed\n        } : note)\n      };\n\n    case \"delete_note\":\n      return { ...state,\n        notes: state.notes.filter(({\n          id\n        }) => id !== action.id)\n      };\n\n    default:\n      throw new Error();\n  }\n};","map":{"version":3,"sources":["/home/zelairy/Рабочий стол/todo-canvas-app/src/store.ts"],"names":["reducer","state","action","type","notes","id","Math","random","toString","substring","title","note","completed","map","filter","Error"],"mappings":"AAwBA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAE,CACL,GAAGH,KAAK,CAACG,KADJ,EAEL;AACEC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CADN;AAEEC,UAAAA,KAAK,EAAER,MAAM,CAACS,IAFhB;AAGEC,UAAAA,SAAS,EAAE;AAHb,SAFK;AAFF,OAAP;;AAYF,SAAK,WAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYS,GAAZ,CAAiBF,IAAD,IACrBA,IAAI,CAACN,EAAL,KAAYH,MAAM,CAACG,EAAnB,GAAwB,EAAE,GAAGM,IAAL;AAAWC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA5B,SAAxB,GAAkED,IAD7D;AAFF,OAAP;;AAOF,SAAK,aAAL;AACE,aAAO,EACL,GAAGV,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYU,MAAZ,CAAmB,CAAC;AAAET,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKH,MAAM,CAACG,EAA7C;AAFF,OAAP;;AAKF;AACE,YAAM,IAAIU,KAAJ,EAAN;AA7BJ;AA+BD,CAhCM","sourcesContent":["type Note = {\n  id: string;\n  title: string;\n  completed: boolean;\n};\n\ntype State = {\n  notes: Array<Note>;\n};\n\ntype Action =\n  | {\n      type: \"add_note\";\n      note: string;\n    }\n  | {\n      type: \"done_note\";\n      id: string;\n    }\n  | {\n      type: \"delete_note\";\n      id: string;\n    };\n\nexport const reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"add_note\":\n      return {\n        ...state,\n        notes: [\n          ...state.notes,\n          {\n            id: Math.random().toString(36).substring(7),\n            title: action.note,\n            completed: false,\n          },\n        ],\n      };\n\n    case \"done_note\":\n      return {\n        ...state,\n        notes: state.notes.map((note) =>\n          note.id === action.id ? { ...note, completed: !note.completed } : note\n        ),\n      };\n\n    case \"delete_note\":\n      return {\n        ...state,\n        notes: state.notes.filter(({ id }) => id !== action.id),\n      };\n\n    default:\n      throw new Error();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}