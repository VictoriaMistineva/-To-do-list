{"ast":null,"code":"import { createNanoEvents } from './nanoevents';\nimport { initializeAssistantSDK, settings } from './dev';\nexport const createAssistant = ({\n  getState,\n  getRecoveryState\n}) => {\n  let currentGetState = getState;\n  let currentGetRecoveryState = getRecoveryState;\n  const {\n    on,\n    emit\n  } = createNanoEvents();\n  window.AssistantClient = {\n    onData: command => emit('data', command),\n    onRequestState: () => {\n      return currentGetState();\n    },\n    onRequestRecoveryState: () => {\n      if (currentGetRecoveryState) {\n        return currentGetRecoveryState();\n      }\n\n      return undefined;\n    },\n    onStart: () => emit('start')\n  };\n  setTimeout(() => {\n    var _a;\n\n    return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.ready();\n  }); // таймаут для подписки на start\n\n  return {\n    close: () => {\n      var _a;\n\n      return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.close();\n    },\n    getInitialData: () => window.appInitialData,\n    getRecoveryState: () => window.appRecoveryState,\n    on,\n    sendData: ({\n      action,\n      name,\n      requestId\n    }) => {\n      var _a, _b, _c;\n\n      if ((_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.sendDataContainer) {\n        /* eslint-disable-next-line @typescript-eslint/camelcase */\n        (_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.sendDataContainer(JSON.stringify({\n          data: action,\n          message_name: name || null,\n          requestId\n        }));\n      } else {\n        (_c = window.AssistantHost) === null || _c === void 0 ? void 0 : _c.sendData(JSON.stringify(action), name || null);\n      }\n    },\n    setGetState: nextGetState => {\n      currentGetState = nextGetState;\n    },\n    setGetRecoveryState: nextGetRecoveryState => {\n      currentGetRecoveryState = nextGetRecoveryState;\n    },\n    setSuggest: suggest => {\n      var _a;\n\n      return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.setSuggest(suggest);\n    }\n  };\n};\nexport const createAssistantDev = ({\n  getState,\n  getRecoveryState,\n  initPhrase,\n  nativePanel,\n  url,\n  userId,\n  token,\n  userChannel,\n  surface,\n  surfaceVersion,\n  sdkVersion,\n  enableRecord = false,\n  recordParams,\n  settings,\n  voiceSettings\n}) => {\n  initializeAssistantSDK({\n    initPhrase,\n    nativePanel,\n    url,\n    userId,\n    token,\n    userChannel,\n    surface,\n    surfaceVersion,\n    sdkVersion,\n    enableRecord,\n    recordParams,\n    settings,\n    voiceSettings: voiceSettings || {\n      startVoiceDelay: 1\n    }\n  });\n  return createAssistant({\n    getState,\n    getRecoveryState\n  });\n};\n\nconst parseJwt = token => {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`).join(''));\n  return JSON.parse(jsonPayload);\n}; // Публичный метод, использующий токен из SmartApp Studio\n\n\nexport const createSmartappDebugger = ({\n  token,\n  initPhrase,\n  getState,\n  getRecoveryState\n}) => {\n  try {\n    const {\n      exp\n    } = parseJwt(token);\n\n    if (exp * 1000 <= Date.now()) {\n      alert('Срок действия токена истек!');\n      throw new Error('Token expired');\n    }\n  } catch (exc) {\n    if (exc.message !== 'Token expired') {\n      alert('Указан невалидный токен!');\n      throw new Error('Wrong token');\n    }\n\n    throw exc;\n  }\n\n  return createAssistantDev({\n    initPhrase,\n    token,\n    settings: Object.assign(Object.assign({}, settings), {\n      authConnector: 'developer_portal_jwt'\n    }),\n    getState,\n    getRecoveryState,\n    url: 'wss://nlp2vps.online.sberbank.ru:443/vps/',\n    surface: 'SBERBOX',\n    userChannel: 'B2C'\n  });\n};\nexport { createRecordOfflinePlayer as createRecordPlayer } from './record/offline-player';\nexport * from './typings';\nexport * from './dev';\nexport { createClient } from './client';\nexport { createAudioRecorder } from './createAudioRecorder';\nexport { initializeDebugging } from './debug';","map":{"version":3,"sources":["/home/zelairy/Рабочий стол/todo-canvas-app/node_modules/@sberdevices/assistant-client/dist/index.js"],"names":["createNanoEvents","initializeAssistantSDK","settings","createAssistant","getState","getRecoveryState","currentGetState","currentGetRecoveryState","on","emit","window","AssistantClient","onData","command","onRequestState","onRequestRecoveryState","undefined","onStart","setTimeout","_a","AssistantHost","ready","close","getInitialData","appInitialData","appRecoveryState","sendData","action","name","requestId","_b","_c","sendDataContainer","JSON","stringify","data","message_name","setGetState","nextGetState","setGetRecoveryState","nextGetRecoveryState","setSuggest","suggest","createAssistantDev","initPhrase","nativePanel","url","userId","token","userChannel","surface","surfaceVersion","sdkVersion","enableRecord","recordParams","voiceSettings","startVoiceDelay","parseJwt","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","createSmartappDebugger","exp","Date","now","alert","Error","exc","message","Object","assign","authConnector","createRecordOfflinePlayer","createRecordPlayer","createClient","createAudioRecorder","initializeDebugging"],"mappings":"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","sourcesContent":["import { createNanoEvents } from './nanoevents';\nimport { initializeAssistantSDK, settings } from './dev';\nexport const createAssistant = ({ getState, getRecoveryState, }) => {\n    let currentGetState = getState;\n    let currentGetRecoveryState = getRecoveryState;\n    const { on, emit } = createNanoEvents();\n    window.AssistantClient = {\n        onData: (command) => emit('data', command),\n        onRequestState: () => {\n            return currentGetState();\n        },\n        onRequestRecoveryState: () => {\n            if (currentGetRecoveryState) {\n                return currentGetRecoveryState();\n            }\n            return undefined;\n        },\n        onStart: () => emit('start'),\n    };\n    setTimeout(() => { var _a; return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.ready(); }); // таймаут для подписки на start\n    return {\n        close: () => { var _a; return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.close(); },\n        getInitialData: () => window.appInitialData,\n        getRecoveryState: () => window.appRecoveryState,\n        on,\n        sendData: ({ action, name, requestId, }) => {\n            var _a, _b, _c;\n            if ((_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.sendDataContainer) {\n                /* eslint-disable-next-line @typescript-eslint/camelcase */\n                (_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.sendDataContainer(JSON.stringify({ data: action, message_name: name || null, requestId }));\n            }\n            else {\n                (_c = window.AssistantHost) === null || _c === void 0 ? void 0 : _c.sendData(JSON.stringify(action), name || null);\n            }\n        },\n        setGetState: (nextGetState) => {\n            currentGetState = nextGetState;\n        },\n        setGetRecoveryState: (nextGetRecoveryState) => {\n            currentGetRecoveryState = nextGetRecoveryState;\n        },\n        setSuggest: (suggest) => { var _a; return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.setSuggest(suggest); },\n    };\n};\nexport const createAssistantDev = ({ getState, getRecoveryState, initPhrase, nativePanel, url, userId, token, userChannel, surface, surfaceVersion, sdkVersion, enableRecord = false, recordParams, settings, voiceSettings, }) => {\n    initializeAssistantSDK({\n        initPhrase,\n        nativePanel,\n        url,\n        userId,\n        token,\n        userChannel,\n        surface,\n        surfaceVersion,\n        sdkVersion,\n        enableRecord,\n        recordParams,\n        settings,\n        voiceSettings: voiceSettings || { startVoiceDelay: 1 },\n    });\n    return createAssistant({ getState, getRecoveryState });\n};\nconst parseJwt = (token) => {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64)\n        .split('')\n        .map((c) => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\n        .join(''));\n    return JSON.parse(jsonPayload);\n};\n// Публичный метод, использующий токен из SmartApp Studio\nexport const createSmartappDebugger = ({ token, initPhrase, getState, getRecoveryState, }) => {\n    try {\n        const { exp } = parseJwt(token);\n        if (exp * 1000 <= Date.now()) {\n            alert('Срок действия токена истек!');\n            throw new Error('Token expired');\n        }\n    }\n    catch (exc) {\n        if (exc.message !== 'Token expired') {\n            alert('Указан невалидный токен!');\n            throw new Error('Wrong token');\n        }\n        throw exc;\n    }\n    return createAssistantDev({\n        initPhrase,\n        token,\n        settings: Object.assign(Object.assign({}, settings), { authConnector: 'developer_portal_jwt' }),\n        getState,\n        getRecoveryState,\n        url: 'wss://nlp2vps.online.sberbank.ru:443/vps/',\n        surface: 'SBERBOX',\n        userChannel: 'B2C',\n    });\n};\nexport { createRecordOfflinePlayer as createRecordPlayer } from './record/offline-player';\nexport * from './typings';\nexport * from './dev';\nexport { createClient } from './client';\nexport { createAudioRecorder } from './createAudioRecorder';\nexport { initializeDebugging } from './debug';\n"]},"metadata":{},"sourceType":"module"}